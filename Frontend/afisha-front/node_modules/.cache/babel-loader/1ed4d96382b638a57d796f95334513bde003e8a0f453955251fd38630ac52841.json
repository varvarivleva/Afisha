{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\source\\\\repos\\\\Afisha\\\\Frontend\\\\afisha-front\\\\src\\\\EnterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './EnterPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnterPageRegister = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState(''); // Добавляем состояние для email\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/enter_page/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          email\n        }) // Добавляем email в запрос\n      });\n      if (!response.ok) throw new Error('Ошибка сервера');\n      const data = await response.json();\n      console.log('Успешная регистрация:', data);\n    } catch (error) {\n      console.error('Ошибка регистрации:', error.message);\n    }\n  };\n  const handleSignIn = () => navigate('/authorization');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u043B\\u043E\\u0433\\u0438\\u043D\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"email\" // Добавляем поле email\n          ,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"register-button\",\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signin-link\",\n        onClick: handleSignIn,\n        children: \"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(EnterPageRegister, \"UeJZMfgOBRRIkl1zHWMq9lmVGxA=\", false, function () {\n  return [useNavigate];\n});\n_c = EnterPageRegister;\nexport default EnterPageRegister;\nvar _c;\n$RefreshReg$(_c, \"EnterPageRegister\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","EnterPageRegister","_s","username","setUsername","password","setPassword","email","setEmail","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","message","handleSignIn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/source/repos/Afisha/Frontend/afisha-front/src/EnterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './EnterPage.css';\r\n\r\nconst EnterPageRegister = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState(''); // Добавляем состояние для email\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/enter_page/register', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username, password, email }), // Добавляем email в запрос\r\n            });\r\n\r\n            if (!response.ok) throw new Error('Ошибка сервера');\r\n            const data = await response.json();\r\n            console.log('Успешная регистрация:', data);\r\n        } catch (error) {\r\n            console.error('Ошибка регистрации:', error.message);\r\n        }\r\n    };\r\n\r\n    const handleSignIn = () => navigate('/authorization');\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <div className=\"register-card\">\r\n                <h2>Регистрация</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"логин\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"пароль\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"email\" // Добавляем поле email\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                    <button type=\"submit\" className=\"register-button\">\r\n                        Зарегистрироваться\r\n                    </button>\r\n                </form>\r\n                <button className=\"signin-link\" onClick={handleSignIn}>\r\n                    Уже зарегистрирован\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EnterPageRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}