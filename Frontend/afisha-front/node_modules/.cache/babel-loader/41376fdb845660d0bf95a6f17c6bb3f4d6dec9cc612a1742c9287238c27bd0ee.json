{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\source\\\\repos\\\\Afisha\\\\Frontend\\\\afisha-front\\\\src\\\\Authorizaton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Authorization.css'; // Подключаем CSS для стилизации\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Authorization = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(''); // Состояние для хранения сообщения об ошибке\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage(''); // Сбрасываем сообщение об ошибке перед новым запросом\n\n    try {\n      const response = await fetch('http://localhost:5000/api/enter_page/authorization', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const responseData = await response.json(); // Получаем тело ответа\n\n      // Обработка ошибок 400\n      if (response.status === 400 && responseData.message === 'All fields are required') {\n        throw new Error('400: Не все поля заполнены');\n      }\n      if (response.status === 400 && responseData.message === 'Invalid username') {\n        throw new Error('400: Такого пользователя не существует');\n      }\n      if (response.status === 400 && responseData.message === 'Invalid password') {\n        throw new Error('400: Неверный пароль');\n      }\n\n      // Обработка ошибки 500\n      if (response.status === 500) {\n        throw new Error('500: Ошибка сервера, повторите попытку позже');\n      }\n      if (!response.ok) {\n        throw new Error(responseData.message || 'Ошибка сервера');\n      }\n      console.log('Успешная авторизация:', responseData);\n    } catch (error) {\n      console.error('Ошибка авторизации:', error.message);\n      setErrorMessage(error.message); // Устанавливаем сообщение об ошибке\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [errorMessage &&\n    /*#__PURE__*/\n    // Показываем сообщение об ошибке\n    _jsxDEV(\"div\", {\n      className: \"error-popup\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"auth-button\",\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Authorization, \"q37Po17WbhPwv8Y2XJ4Bs6FUZXE=\");\n_c = Authorization;\nexport default Authorization;\nvar _c;\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Authorization","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","status","message","Error","ok","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/user/source/repos/Afisha/Frontend/afisha-front/src/Authorizaton.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Authorization.css'; // Подключаем CSS для стилизации\r\n\r\nconst Authorization = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState(''); // Состояние для хранения сообщения об ошибке\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setErrorMessage(''); // Сбрасываем сообщение об ошибке перед новым запросом\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/enter_page/authorization', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            const responseData = await response.json(); // Получаем тело ответа\r\n\r\n            // Обработка ошибок 400\r\n            if (response.status === 400 && responseData.message === 'All fields are required') {\r\n                throw new Error('400: Не все поля заполнены');\r\n            }\r\n\r\n            if (response.status === 400 && responseData.message === 'Invalid username') {\r\n                throw new Error('400: Такого пользователя не существует');\r\n            }\r\n\r\n            if (response.status === 400 && responseData.message === 'Invalid password') {\r\n                throw new Error('400: Неверный пароль');\r\n            }\r\n\r\n            // Обработка ошибки 500\r\n            if (response.status === 500) {\r\n                throw new Error('500: Ошибка сервера, повторите попытку позже');\r\n            }\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message || 'Ошибка сервера');\r\n            }\r\n\r\n            console.log('Успешная авторизация:', responseData);\r\n        } catch (error) {\r\n            console.error('Ошибка авторизации:', error.message);\r\n            setErrorMessage(error.message); // Устанавливаем сообщение об ошибке\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-container\">\r\n            {errorMessage && ( // Показываем сообщение об ошибке\r\n                <div className=\"error-popup\">\r\n                    {errorMessage}\r\n                </div>\r\n            )}\r\n            <div className=\"auth-card\">\r\n                <h2>Авторизация</h2> {/* Заголовок страницы */}\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Логин\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Пароль\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <button type=\"submit\" className=\"auth-button\">\r\n                        Войти\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Authorization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}