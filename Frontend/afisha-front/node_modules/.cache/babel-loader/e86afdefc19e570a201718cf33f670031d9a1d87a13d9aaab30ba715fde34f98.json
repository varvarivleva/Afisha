{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\source\\\\repos\\\\Afisha\\\\Frontend\\\\afisha-front\\\\src\\\\EnterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './EnterPage.css'; // Подключаем CSS для стилей уведомлений\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnterPageRegister = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [errorMessage, setErrorMessage] = useState(''); // Состояние для сообщения об ошибке\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage(''); // Сбрасываем сообщение об ошибке перед новым запросом\n\n    try {\n      const response = await fetch('http://localhost:5000/api/enter_page/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          email\n        })\n      });\n      if (response.status === 500) {\n        // Обрабатываем 500-ую ошибку\n        throw new Error('500: Internal Server Error');\n      }\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Ошибка сервера');\n      }\n      const data = await response.json();\n      console.log('Registration successful:', data);\n    } catch (error) {\n      console.error('Error during fetch:', error.message);\n      setErrorMessage(error.message); // Устанавливаем сообщение об ошибке\n    }\n  };\n  const handleSignIn = () => {\n    navigate('/authorization');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"enter-page-container\",\n    children: [errorMessage &&\n    /*#__PURE__*/\n    // Показываем сообщение об ошибке\n    _jsxDEV(\"div\", {\n      className: \"error-popup\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSignIn,\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(EnterPageRegister, \"G3gGoJjEJlSxEYaK0V8Xsj4UZpw=\", false, function () {\n  return [useNavigate];\n});\n_c = EnterPageRegister;\nexport default EnterPageRegister;\nvar _c;\n$RefreshReg$(_c, \"EnterPageRegister\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","EnterPageRegister","_s","username","setUsername","password","setPassword","email","setEmail","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","status","Error","ok","errorData","json","message","data","console","log","error","handleSignIn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/source/repos/Afisha/Frontend/afisha-front/src/EnterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './EnterPage.css'; // Подключаем CSS для стилей уведомлений\r\n\r\nconst EnterPageRegister = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState(''); // Состояние для сообщения об ошибке\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setErrorMessage(''); // Сбрасываем сообщение об ошибке перед новым запросом\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/enter_page/register', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username, password, email }),\r\n            });\r\n\r\n            if (response.status === 500) { // Обрабатываем 500-ую ошибку\r\n                throw new Error('500: Internal Server Error');\r\n            }\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Ошибка сервера');\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log('Registration successful:', data);\r\n        } catch (error) {\r\n            console.error('Error during fetch:', error.message);\r\n            setErrorMessage(error.message); // Устанавливаем сообщение об ошибке\r\n        }\r\n    };\r\n\r\n    const handleSignIn = () => {\r\n        navigate('/authorization');\r\n    };\r\n\r\n    return (\r\n        <div className=\"enter-page-container\">\r\n            {errorMessage && ( // Показываем сообщение об ошибке\r\n                <div className=\"error-popup\">\r\n                    {errorMessage}\r\n                </div>\r\n            )}\r\n            <form onSubmit={handleSubmit} className=\"register-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Register</button>\r\n                <button type=\"button\" onClick={handleSignIn}>\r\n                    Sign in\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EnterPageRegister;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;;IAErB,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAElB,QAAQ;UAAEE,QAAQ;UAAEE;QAAM,CAAC;MACtD,CAAC,CAAC;MAEF,IAAIQ,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QAAE;QAC3B,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MAEA,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QACd,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIH,KAAK,CAACE,SAAS,CAACE,OAAO,IAAI,gBAAgB,CAAC;MAC1D;MAEA,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCG,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,IAAI,CAAC;IACjD,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACJ,OAAO,CAAC;MACnDjB,eAAe,CAACqB,KAAK,CAACJ,OAAO,CAAC,CAAC,CAAC;IACpC;EACJ,CAAC;EAED,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACvBrB,QAAQ,CAAC,gBAAgB,CAAC;EAC9B,CAAC;EAED,oBACIX,OAAA;IAAKiC,SAAS,EAAC,sBAAsB;IAAAC,QAAA,GAChCzB,YAAY;IAAA;IAAM;IACfT,OAAA;MAAKiC,SAAS,EAAC,aAAa;MAAAC,QAAA,EACvBzB;IAAY;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACR,eACDtC,OAAA;MAAMuC,QAAQ,EAAE3B,YAAa;MAACqB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACnDlC,OAAA;QACIwC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,QAAQ,EAAG7B,CAAC,IAAKT,WAAW,CAACS,CAAC,CAAC8B,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFtC,OAAA;QACIwC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,QAAQ,EAAG7B,CAAC,IAAKP,WAAW,CAACO,CAAC,CAAC8B,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFtC,OAAA;QACIwC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,QAAQ,EAAG7B,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAAC8B,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFtC,OAAA;QAAQwC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvCtC,OAAA;QAAQwC,IAAI,EAAC,QAAQ;QAACK,OAAO,EAAEb,YAAa;QAAAE,QAAA,EAAC;MAE7C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACpC,EAAA,CArEID,iBAAiB;EAAA,QAKFH,WAAW;AAAA;AAAAgD,EAAA,GAL1B7C,iBAAiB;AAuEvB,eAAeA,iBAAiB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}